/*
WB Supplier Stats

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse2003 
type InlineResponse2003 struct {
	// Номер документа
	Number string `json:"number"`
	// Дата продажи
	Date string `json:"date"`
	// Дата и время обновления информации в сервисе
	LastChangeDate string `json:"lastChangeDate"`
	// Артикул продавца
	SupplierArticle string `json:"supplierArticle"`
	// Размер
	TechSize string `json:"techSize"`
	// Штрих-код
	Barcode string `json:"barcode"`
	// Количество
	Quantity int64 `json:"quantity"`
	// Начальная розничная цена товара
	TotalPrice float32 `json:"totalPrice"`
	// Согласованная скидка на товар
	DiscountPercent float32 `json:"discountPercent"`
	// Договор поставки
	IsSupply bool `json:"isSupply"`
	// Договор реализации
	IsRealization bool `json:"isRealization"`
	// Идентификатор заказа
	OrderId int64 `json:"orderId"`
	// Согласованный промокод
	PromoCodeDiscount float32 `json:"promoCodeDiscount"`
	// Склад отгрузки
	WarehouseName string `json:"warehouseName"`
	// Страна
	CountryName string `json:"countryName"`
	// Округ
	OblastOkrugName string `json:"oblastOkrugName"`
	// Регион
	RegionName string `json:"regionName"`
	// Идентификатор поставки
	IncomeID int64 `json:"incomeID"`
	// Уникальный идентификатор продажи/возврата
	SaleID string `json:"saleID"`
	// Уникальный идентификатор позиции заказа
	Odid int64 `json:"odid"`
	// Согласованная скидка постоянного покупателя
	Spp float32 `json:"spp"`
	// К перечислению поставщику
	ForPay float32 `json:"forPay"`
	// Фактическая цена из заказа с учетом всех скидок
	FinishedPrice float32 `json:"finishedPrice"`
	// Цена, от которой считается вознаграждение поставщика forpay (с учетом всех согласованных скидок)
	PriceWithDisc float32 `json:"priceWithDisc"`
	// код wildberries
	NmId int64 `json:"nmId"`
	// Предмет
	Subject string `json:"subject"`
	// Категория
	Category string `json:"category"`
	// Бренд
	Brand string `json:"brand"`
	// (?)
	IsStorno float32 `json:"IsStorno"`
	// Номер заказа
	GNumber string `json:"gNumber"`
}

// NewInlineResponse2003 instantiates a new InlineResponse2003 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2003(number string, date string, lastChangeDate string, supplierArticle string, techSize string, barcode string, quantity int64, totalPrice float32, discountPercent float32, isSupply bool, isRealization bool, orderId int64, promoCodeDiscount float32, warehouseName string, countryName string, oblastOkrugName string, regionName string, incomeID int64, saleID string, odid int64, spp float32, forPay float32, finishedPrice float32, priceWithDisc float32, nmId int64, subject string, category string, brand string, isStorno float32, gNumber string) *InlineResponse2003 {
	this := InlineResponse2003{}
	this.Number = number
	this.Date = date
	this.LastChangeDate = lastChangeDate
	this.SupplierArticle = supplierArticle
	this.TechSize = techSize
	this.Barcode = barcode
	this.Quantity = quantity
	this.TotalPrice = totalPrice
	this.DiscountPercent = discountPercent
	this.IsSupply = isSupply
	this.IsRealization = isRealization
	this.OrderId = orderId
	this.PromoCodeDiscount = promoCodeDiscount
	this.WarehouseName = warehouseName
	this.CountryName = countryName
	this.OblastOkrugName = oblastOkrugName
	this.RegionName = regionName
	this.IncomeID = incomeID
	this.SaleID = saleID
	this.Odid = odid
	this.Spp = spp
	this.ForPay = forPay
	this.FinishedPrice = finishedPrice
	this.PriceWithDisc = priceWithDisc
	this.NmId = nmId
	this.Subject = subject
	this.Category = category
	this.Brand = brand
	this.IsStorno = isStorno
	this.GNumber = gNumber
	return &this
}

// NewInlineResponse2003WithDefaults instantiates a new InlineResponse2003 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2003WithDefaults() *InlineResponse2003 {
	this := InlineResponse2003{}
	return &this
}

// GetNumber returns the Number field value
func (o *InlineResponse2003) GetNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *InlineResponse2003) SetNumber(v string) {
	o.Number = v
}

// GetDate returns the Date field value
func (o *InlineResponse2003) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *InlineResponse2003) SetDate(v string) {
	o.Date = v
}

// GetLastChangeDate returns the LastChangeDate field value
func (o *InlineResponse2003) GetLastChangeDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastChangeDate
}

// GetLastChangeDateOk returns a tuple with the LastChangeDate field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetLastChangeDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastChangeDate, true
}

// SetLastChangeDate sets field value
func (o *InlineResponse2003) SetLastChangeDate(v string) {
	o.LastChangeDate = v
}

// GetSupplierArticle returns the SupplierArticle field value
func (o *InlineResponse2003) GetSupplierArticle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SupplierArticle
}

// GetSupplierArticleOk returns a tuple with the SupplierArticle field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetSupplierArticleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SupplierArticle, true
}

// SetSupplierArticle sets field value
func (o *InlineResponse2003) SetSupplierArticle(v string) {
	o.SupplierArticle = v
}

// GetTechSize returns the TechSize field value
func (o *InlineResponse2003) GetTechSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TechSize
}

// GetTechSizeOk returns a tuple with the TechSize field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetTechSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TechSize, true
}

// SetTechSize sets field value
func (o *InlineResponse2003) SetTechSize(v string) {
	o.TechSize = v
}

// GetBarcode returns the Barcode field value
func (o *InlineResponse2003) GetBarcode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Barcode
}

// GetBarcodeOk returns a tuple with the Barcode field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetBarcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Barcode, true
}

// SetBarcode sets field value
func (o *InlineResponse2003) SetBarcode(v string) {
	o.Barcode = v
}

// GetQuantity returns the Quantity field value
func (o *InlineResponse2003) GetQuantity() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetQuantityOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *InlineResponse2003) SetQuantity(v int64) {
	o.Quantity = v
}

// GetTotalPrice returns the TotalPrice field value
func (o *InlineResponse2003) GetTotalPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalPrice
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetTotalPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPrice, true
}

// SetTotalPrice sets field value
func (o *InlineResponse2003) SetTotalPrice(v float32) {
	o.TotalPrice = v
}

// GetDiscountPercent returns the DiscountPercent field value
func (o *InlineResponse2003) GetDiscountPercent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DiscountPercent
}

// GetDiscountPercentOk returns a tuple with the DiscountPercent field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetDiscountPercentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountPercent, true
}

// SetDiscountPercent sets field value
func (o *InlineResponse2003) SetDiscountPercent(v float32) {
	o.DiscountPercent = v
}

// GetIsSupply returns the IsSupply field value
func (o *InlineResponse2003) GetIsSupply() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSupply
}

// GetIsSupplyOk returns a tuple with the IsSupply field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetIsSupplyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSupply, true
}

// SetIsSupply sets field value
func (o *InlineResponse2003) SetIsSupply(v bool) {
	o.IsSupply = v
}

// GetIsRealization returns the IsRealization field value
func (o *InlineResponse2003) GetIsRealization() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsRealization
}

// GetIsRealizationOk returns a tuple with the IsRealization field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetIsRealizationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsRealization, true
}

// SetIsRealization sets field value
func (o *InlineResponse2003) SetIsRealization(v bool) {
	o.IsRealization = v
}

// GetOrderId returns the OrderId field value
func (o *InlineResponse2003) GetOrderId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetOrderIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *InlineResponse2003) SetOrderId(v int64) {
	o.OrderId = v
}

// GetPromoCodeDiscount returns the PromoCodeDiscount field value
func (o *InlineResponse2003) GetPromoCodeDiscount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PromoCodeDiscount
}

// GetPromoCodeDiscountOk returns a tuple with the PromoCodeDiscount field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetPromoCodeDiscountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PromoCodeDiscount, true
}

// SetPromoCodeDiscount sets field value
func (o *InlineResponse2003) SetPromoCodeDiscount(v float32) {
	o.PromoCodeDiscount = v
}

// GetWarehouseName returns the WarehouseName field value
func (o *InlineResponse2003) GetWarehouseName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WarehouseName
}

// GetWarehouseNameOk returns a tuple with the WarehouseName field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetWarehouseNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WarehouseName, true
}

// SetWarehouseName sets field value
func (o *InlineResponse2003) SetWarehouseName(v string) {
	o.WarehouseName = v
}

// GetCountryName returns the CountryName field value
func (o *InlineResponse2003) GetCountryName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetCountryNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryName, true
}

// SetCountryName sets field value
func (o *InlineResponse2003) SetCountryName(v string) {
	o.CountryName = v
}

// GetOblastOkrugName returns the OblastOkrugName field value
func (o *InlineResponse2003) GetOblastOkrugName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OblastOkrugName
}

// GetOblastOkrugNameOk returns a tuple with the OblastOkrugName field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetOblastOkrugNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OblastOkrugName, true
}

// SetOblastOkrugName sets field value
func (o *InlineResponse2003) SetOblastOkrugName(v string) {
	o.OblastOkrugName = v
}

// GetRegionName returns the RegionName field value
func (o *InlineResponse2003) GetRegionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetRegionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegionName, true
}

// SetRegionName sets field value
func (o *InlineResponse2003) SetRegionName(v string) {
	o.RegionName = v
}

// GetIncomeID returns the IncomeID field value
func (o *InlineResponse2003) GetIncomeID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.IncomeID
}

// GetIncomeIDOk returns a tuple with the IncomeID field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetIncomeIDOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncomeID, true
}

// SetIncomeID sets field value
func (o *InlineResponse2003) SetIncomeID(v int64) {
	o.IncomeID = v
}

// GetSaleID returns the SaleID field value
func (o *InlineResponse2003) GetSaleID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SaleID
}

// GetSaleIDOk returns a tuple with the SaleID field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetSaleIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SaleID, true
}

// SetSaleID sets field value
func (o *InlineResponse2003) SetSaleID(v string) {
	o.SaleID = v
}

// GetOdid returns the Odid field value
func (o *InlineResponse2003) GetOdid() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Odid
}

// GetOdidOk returns a tuple with the Odid field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetOdidOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Odid, true
}

// SetOdid sets field value
func (o *InlineResponse2003) SetOdid(v int64) {
	o.Odid = v
}

// GetSpp returns the Spp field value
func (o *InlineResponse2003) GetSpp() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Spp
}

// GetSppOk returns a tuple with the Spp field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetSppOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spp, true
}

// SetSpp sets field value
func (o *InlineResponse2003) SetSpp(v float32) {
	o.Spp = v
}

// GetForPay returns the ForPay field value
func (o *InlineResponse2003) GetForPay() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ForPay
}

// GetForPayOk returns a tuple with the ForPay field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetForPayOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForPay, true
}

// SetForPay sets field value
func (o *InlineResponse2003) SetForPay(v float32) {
	o.ForPay = v
}

// GetFinishedPrice returns the FinishedPrice field value
func (o *InlineResponse2003) GetFinishedPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FinishedPrice
}

// GetFinishedPriceOk returns a tuple with the FinishedPrice field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetFinishedPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinishedPrice, true
}

// SetFinishedPrice sets field value
func (o *InlineResponse2003) SetFinishedPrice(v float32) {
	o.FinishedPrice = v
}

// GetPriceWithDisc returns the PriceWithDisc field value
func (o *InlineResponse2003) GetPriceWithDisc() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PriceWithDisc
}

// GetPriceWithDiscOk returns a tuple with the PriceWithDisc field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetPriceWithDiscOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PriceWithDisc, true
}

// SetPriceWithDisc sets field value
func (o *InlineResponse2003) SetPriceWithDisc(v float32) {
	o.PriceWithDisc = v
}

// GetNmId returns the NmId field value
func (o *InlineResponse2003) GetNmId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NmId
}

// GetNmIdOk returns a tuple with the NmId field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetNmIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NmId, true
}

// SetNmId sets field value
func (o *InlineResponse2003) SetNmId(v int64) {
	o.NmId = v
}

// GetSubject returns the Subject field value
func (o *InlineResponse2003) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *InlineResponse2003) SetSubject(v string) {
	o.Subject = v
}

// GetCategory returns the Category field value
func (o *InlineResponse2003) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *InlineResponse2003) SetCategory(v string) {
	o.Category = v
}

// GetBrand returns the Brand field value
func (o *InlineResponse2003) GetBrand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Brand
}

// GetBrandOk returns a tuple with the Brand field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetBrandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Brand, true
}

// SetBrand sets field value
func (o *InlineResponse2003) SetBrand(v string) {
	o.Brand = v
}

// GetIsStorno returns the IsStorno field value
func (o *InlineResponse2003) GetIsStorno() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.IsStorno
}

// GetIsStornoOk returns a tuple with the IsStorno field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetIsStornoOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsStorno, true
}

// SetIsStorno sets field value
func (o *InlineResponse2003) SetIsStorno(v float32) {
	o.IsStorno = v
}

// GetGNumber returns the GNumber field value
func (o *InlineResponse2003) GetGNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GNumber
}

// GetGNumberOk returns a tuple with the GNumber field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetGNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GNumber, true
}

// SetGNumber sets field value
func (o *InlineResponse2003) SetGNumber(v string) {
	o.GNumber = v
}

func (o InlineResponse2003) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["number"] = o.Number
	}
	if true {
		toSerialize["date"] = o.Date
	}
	if true {
		toSerialize["lastChangeDate"] = o.LastChangeDate
	}
	if true {
		toSerialize["supplierArticle"] = o.SupplierArticle
	}
	if true {
		toSerialize["techSize"] = o.TechSize
	}
	if true {
		toSerialize["barcode"] = o.Barcode
	}
	if true {
		toSerialize["quantity"] = o.Quantity
	}
	if true {
		toSerialize["totalPrice"] = o.TotalPrice
	}
	if true {
		toSerialize["discountPercent"] = o.DiscountPercent
	}
	if true {
		toSerialize["isSupply"] = o.IsSupply
	}
	if true {
		toSerialize["isRealization"] = o.IsRealization
	}
	if true {
		toSerialize["orderId"] = o.OrderId
	}
	if true {
		toSerialize["promoCodeDiscount"] = o.PromoCodeDiscount
	}
	if true {
		toSerialize["warehouseName"] = o.WarehouseName
	}
	if true {
		toSerialize["countryName"] = o.CountryName
	}
	if true {
		toSerialize["oblastOkrugName"] = o.OblastOkrugName
	}
	if true {
		toSerialize["regionName"] = o.RegionName
	}
	if true {
		toSerialize["incomeID"] = o.IncomeID
	}
	if true {
		toSerialize["saleID"] = o.SaleID
	}
	if true {
		toSerialize["odid"] = o.Odid
	}
	if true {
		toSerialize["spp"] = o.Spp
	}
	if true {
		toSerialize["forPay"] = o.ForPay
	}
	if true {
		toSerialize["finishedPrice"] = o.FinishedPrice
	}
	if true {
		toSerialize["priceWithDisc"] = o.PriceWithDisc
	}
	if true {
		toSerialize["nmId"] = o.NmId
	}
	if true {
		toSerialize["subject"] = o.Subject
	}
	if true {
		toSerialize["category"] = o.Category
	}
	if true {
		toSerialize["brand"] = o.Brand
	}
	if true {
		toSerialize["IsStorno"] = o.IsStorno
	}
	if true {
		toSerialize["gNumber"] = o.GNumber
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2003 struct {
	value *InlineResponse2003
	isSet bool
}

func (v NullableInlineResponse2003) Get() *InlineResponse2003 {
	return v.value
}

func (v *NullableInlineResponse2003) Set(val *InlineResponse2003) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2003) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2003) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2003(val *InlineResponse2003) *NullableInlineResponse2003 {
	return &NullableInlineResponse2003{value: val, isSet: true}
}

func (v NullableInlineResponse2003) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2003) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


